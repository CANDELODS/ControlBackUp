{"version":3,"sources":["app.js"],"names":["iniciarApp","prepararCheckboxes","document","querySelectorAll","forEach","checkbox","value","checked","addEventListener","this","abrirMenu","querySelector","cerrarMenu","navegacion","links","classList","add","remove","link","setTimeout","formulario","e","filas","equiposSinCopia","fila","nombreEquipo","innerText","trim","local","nube","localMarcado","nubeMarcado","push","length","mensaje","join","confirm","preventDefault","checkboxes","cb","inputFecha","confirmDelete","message","Date","getDay","alert"],"mappings":"AAuCA,SAAAA,aACAC,qBAOA,SAAAA,qBACAC,SAAAC,iBAAA,eAEAC,QAAAC,IAIAA,EAAAC,MAAAD,EAAAE,QAAA,IAAA,IAIAF,EAAAG,iBAAA,UAAA,WACAC,KAAAH,MAAAG,KAAAF,QAAA,IAAA,SA3DAL,SAAAM,iBAAA,oBAAA,WACAR,aAGA,MAAAU,EAAAR,SAAAS,cAAA,cACAC,EAAAV,SAAAS,cAAA,eACAE,EAAAX,SAAAS,cAAA,eACAG,EAAAZ,SAAAC,iBAAA,uBAGAO,EAAAF,iBAAA,SAAA,WAEAK,EAAAE,UAAAC,IAAA,cAIAJ,EAAAJ,iBAAA,SAAA,WAEAK,EAAAE,UAAAE,OAAA,cAIAH,EAAAV,QAAAc,IAEAA,EAAAV,iBAAA,SAAA,WAEAK,EAAAE,UAAAC,IAAA,YAEAH,EAAAE,UAAAE,OAAA,WAEAE,WAAA,KACAN,EAAAE,UAAAE,OAAA,aACA,aAkCA,MAAAG,WAAAlB,SAAAS,cAAA,qBAEAS,WAAAZ,iBAAA,UAAA,SAAAa,GACA,MAAAC,EAAAF,WAAAjB,iBAAA,YACA,IAAAoB,EAAA,GAiBA,GAfAD,EAAAlB,QAAAoB,IACA,MAAAC,EAAAD,EAAAb,cAAA,2BAAAe,UAAAC,OACAC,EAAAJ,EAAAb,cAAA,gCACAkB,EAAAL,EAAAb,cAAA,+BAEA,GAAAiB,GAAAC,EAAA,CACA,MAAAC,EAAAF,GAAAA,EAAArB,QACAwB,EAAAF,GAAAA,EAAAtB,QAEAuB,GAAAC,GACAR,EAAAS,KAAAP,MAKAF,EAAAU,OAAA,EAAA,CACA,MAAAC,EAAA,sEACAX,EAAAY,KAAA,QACA,yCAEAC,QAAAF,IACAb,EAAAgB,qBAMA,MAAAC,WAAAlB,WAAAjB,iBAAA,eACAmC,WAAAlC,QAAAmC,IACAA,EAAA/B,iBAAA,UAAA,WACA+B,EAAAjC,MAAAiC,EAAAhC,QAAA,IAAA,SAKA,MAAAiC,WAAAtC,SAAAS,cAAA,2BAaA,SAAA8B,cAAAC,GAEA,OAAAN,QAAAM,GAAA,4CAdAF,WAAAhC,iBAAA,UAAA,WAKA,IAFA,IAAAmC,KAAAH,WAAAlC,OACAsC,WAEAC,MAAA,qCACAL,WAAAlC,MAAA","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n\r\n    // MENÚ MOBILE\r\n    const abrirMenu = document.querySelector('#abrirMenu');\r\n    const cerrarMenu = document.querySelector('#cerrarMenu');\r\n    const navegacion = document.querySelector('#navegacion');\r\n    const links = document.querySelectorAll('.navegacion__enlace');\r\n\r\n    //Función para abrir el menú\r\n    abrirMenu.addEventListener('click', function () {\r\n        //Agrego la clase .mostrar a la nav\r\n        navegacion.classList.add('mostrar');\r\n    });\r\n\r\n    //Función para cerrar el menú\r\n    cerrarMenu.addEventListener('click', function () {\r\n        //Elimino la clase .mostrar a la nav\r\n        navegacion.classList.remove('mostrar');\r\n    });\r\n\r\n    //Función para cerrar el menú al hacer click en un enlace\r\n    links.forEach(link => {\r\n        //Agrego el evento click a cada enlace\r\n        link.addEventListener('click', function () {\r\n            //Agrego la clase .esconder a la navegacion\r\n            navegacion.classList.add('esconder');\r\n            //Elimino la clase .mostrar a la navegacion\r\n            navegacion.classList.remove('mostrar');\r\n            //Elimino la clase .esconder a la navegacion después de 300ms\r\n            setTimeout(() => {\r\n                navegacion.classList.remove('esconder');\r\n            }, 300);\r\n        });\r\n    });\r\n    //FIN MENÚ MOBILE\r\n\r\n});\r\n\r\nfunction iniciarApp() {\r\n    prepararCheckboxes();\r\n    // manejarEnvio();\r\n}\r\n//Esta función asegura que todos los checkboxes tengan un value correcto (1 o 0)\r\n//en el momento en que se envíe el formulario,\r\n//Esto nos ahorra el usar inputs hidden, lo cual nos ayuda a\r\n//evitar datos duplicados o inconsistentes.\r\nfunction prepararCheckboxes() {\r\n    const checkboxes = document.querySelectorAll('.checkboxes');\r\n\r\n    checkboxes.forEach((checkbox) => {\r\n        //Al cargar la página, se establece el valor inicial del checkbox\r\n        //(por defecto es 'on' si está marcado, y si no, no envía nada).\r\n        // Aquí lo cambiamos para que siempre sea '1' si está marcado, '0' si no lo está.\r\n        checkbox.value = checkbox.checked ? '1' : '0';\r\n\r\n        //Cambiamos el valor dinámicamente al marcar/desmarcar\r\n        //Por medio del evento change\r\n        checkbox.addEventListener('change', function () {\r\n            this.value = this.checked ? '1' : '0';\r\n        });\r\n    });\r\n}\r\n\r\n//Se asegura que justo antes de enviar el formulario (con el botón submit),\r\n//los checkboxes vuelvan a ajustar sus valores a 1 o 0, por si algún cambio no se capturó.\r\nconst formulario = document.querySelector('.formulario-copia');\r\n\r\nformulario.addEventListener('submit', function (e) {\r\n    const filas = formulario.querySelectorAll('tbody tr');\r\n    let equiposSinCopia = [];\r\n\r\n    filas.forEach(fila => {\r\n        const nombreEquipo = fila.querySelector('td[data-label=\"Nombre\"]').innerText.trim();\r\n        const local = fila.querySelector('.copia-local:not([disabled])');\r\n        const nube = fila.querySelector('.copia-nube:not([disabled])');\r\n\r\n        if (local || nube) {\r\n            const localMarcado = local && local.checked;\r\n            const nubeMarcado = nube && nube.checked;\r\n\r\n            if (!localMarcado && !nubeMarcado) {\r\n                equiposSinCopia.push(nombreEquipo);\r\n            }\r\n        }\r\n    });\r\n\r\n    if (equiposSinCopia.length > 0) {\r\n        const mensaje = \"⚠️ Los siguientes equipos no tienen marcada ni Local ni Nube:\\n\\n- \"\r\n            + equiposSinCopia.join(\"\\n- \") +\r\n            \"\\n\\n¿Deseas continuar de todas formas?\";\r\n\r\n        if (!confirm(mensaje)) {\r\n            e.preventDefault(); // ❌ Cancela el envío\r\n        }\r\n    }\r\n});\r\n\r\n// Mantener la lógica de 1/0 en los checkboxes\r\nconst checkboxes = formulario.querySelectorAll('.checkboxes');\r\ncheckboxes.forEach(cb => {\r\n    cb.addEventListener('change', function () {\r\n        cb.value = cb.checked ? \"1\" : \"0\";\r\n    });\r\n});\r\n\r\n//Validar dias domingos en el input type date\r\nconst inputFecha = document.querySelector('.formularioFiltro__date');\r\ninputFecha.addEventListener('change', function () {\r\n    //Convertimos el value de inputFecha en un objeto Date para\r\n    //Poder usar el método getDay()\r\n    const fechaSeleccionada = new Date(inputFecha.value);\r\n    const dia = fechaSeleccionada.getDay(); // 6 = Domingo, 0 = Lunes\r\n    if (dia === 6) {\r\n        alert('No puedes seleccionar un domingo.');\r\n        inputFecha.value = ''; // Limpiar el input\r\n    }\r\n});\r\n\r\n//Mensaje de confirmación\r\nfunction confirmDelete(message) {\r\n    //Si no hay mensaje se mostrará el texto por defecto\r\n    return confirm(message || \"¿Estás seguro de eliminar este elemento?\");\r\n}\r\n"]}