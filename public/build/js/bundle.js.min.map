{"version":3,"sources":["app.js"],"names":["iniciarApp","prepararCheckboxes","manejarEnvio","document","querySelectorAll","forEach","checkbox","value","checked","addEventListener","this","formulario","querySelector","checkboxes","cb","abrirMenu","cerrarMenu","navegacion","links","classList","add","remove","link","setTimeout"],"mappings":"AAIA,SAAAA,aACAC,qBACAC,eAMA,SAAAD,qBACAE,SAAAC,iBAAA,eAEAC,QAAAC,IAIAA,EAAAC,MAAAD,EAAAE,QAAA,IAAA,IAIAF,EAAAG,iBAAA,UAAA,WACAC,KAAAH,MAAAG,KAAAF,QAAA,IAAA,SAOA,SAAAN,eACA,MAAAS,EAAAR,SAAAS,cAAA,qBACAC,EAAAF,EAAAP,iBAAA,eAEAO,EAAAF,iBAAA,UAAA,WACAI,EAAAR,QAAAS,IAEAA,EAAAN,SAAA,OAtCAL,SAAAM,iBAAA,oBAAA,WACAT,gBA4CA,MAAAe,UAAAZ,SAAAS,cAAA,cACAI,WAAAb,SAAAS,cAAA,eACAK,WAAAd,SAAAS,cAAA,eACAM,MAAAf,SAAAC,iBAAA,uBAGAW,UAAAN,iBAAA,SAAA,WAEAQ,WAAAE,UAAAC,IAAA,cAIAJ,WAAAP,iBAAA,SAAA,WAEAQ,WAAAE,UAAAE,OAAA,cAIAH,MAAAb,QAAAiB,IAEAA,EAAAb,iBAAA,SAAA,WAEAQ,WAAAE,UAAAC,IAAA,YAEAH,WAAAE,UAAAE,OAAA,WAEAE,WAAA,KACAN,WAAAE,UAAAE,OAAA,aACA","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    prepararCheckboxes();\r\n    manejarEnvio();\r\n}\r\n//Esta función asegura que todos los checkboxes tengan un value correcto (1 o 0)\r\n//en el momento en que se envíe el formulario,\r\n//Esto nos ahorra el usar inputs hidden, lo cual nos ayuda a\r\n//evitar datos duplicados o inconsistentes.\r\nfunction prepararCheckboxes() {\r\n    const checkboxes = document.querySelectorAll('.checkboxes');\r\n\r\n    checkboxes.forEach((checkbox) => {\r\n        //Al cargar la página, se establece el valor inicial del checkbox\r\n        //(por defecto es 'on' si está marcado, y si no, no envía nada).\r\n        // Aquí lo cambiamos para que siempre sea '1' si está marcado, '0' si no lo está.\r\n        checkbox.value = checkbox.checked ? '1' : '0';\r\n\r\n        //Cambiamos el valor dinámicamente al marcar/desmarcar\r\n        //Por medio del evento change\r\n        checkbox.addEventListener('change', function () {\r\n            this.value = this.checked ? '1' : '0';\r\n        });\r\n    });\r\n}\r\n\r\n//Se asegura que justo antes de enviar el formulario (con el botón submit),\r\n//los checkboxes vuelvan a ajustar sus valores a 1 o 0, por si algún cambio no se capturó.\r\nfunction manejarEnvio() {\r\n    const formulario = document.querySelector('.formulario-copia');\r\n    const checkboxes = formulario.querySelectorAll('.checkboxes');\r\n\r\n    formulario.addEventListener('submit', function () {\r\n        checkboxes.forEach(cb => {\r\n            // Fuerza que todos se marquen para ser enviados\r\n            cb.checked = true;\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// MENÚ MOBILE\r\nconst abrirMenu = document.querySelector('#abrirMenu');\r\nconst cerrarMenu = document.querySelector('#cerrarMenu');\r\nconst navegacion = document.querySelector('#navegacion');\r\nconst links = document.querySelectorAll('.navegacion__enlace');\r\n\r\n//Función para abrir el menú\r\nabrirMenu.addEventListener('click', function(){\r\n    //Agrego la clase .mostrar a la nav\r\n    navegacion.classList.add('mostrar');\r\n});\r\n\r\n//Función para cerrar el menú\r\ncerrarMenu.addEventListener('click', function(){\r\n    //Elimino la clase .mostrar a la nav\r\n    navegacion.classList.remove('mostrar');\r\n});\r\n\r\n//Función para cerrar el menú al hacer click en un enlace\r\nlinks.forEach(link => {\r\n    //Agrego el evento click a cada enlace\r\n    link.addEventListener('click', function(){\r\n        //Agrego la clase .esconder a la navegacion\r\n        navegacion.classList.add('esconder');\r\n        //Elimino la clase .mostrar a la navegacion\r\n        navegacion.classList.remove('mostrar');\r\n        //Elimino la clase .esconder a la navegacion después de 300ms\r\n        setTimeout(() => {\r\n            navegacion.classList.remove('esconder');\r\n        }, 300);\r\n    });\r\n});\r\n//FIN MENÚ MOBILE"]}